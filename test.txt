LastArgList(id)
LastArgList(arglist,id)
LastArgList(arglist,id)
IdExpr(id)
IdExpr(id)
BinOpExpr(expr,==,expr)
IdExpr(id)
ReturnStmt(expr)
CompStmt(stmt) t
IdExpr(id)
IdExpr(id)
BinOpExpr(expr,==,expr)
IdExpr(id)
ReturnStmt(expr)
CompStmt(stmt) t
Elsif()
Elsif(expr,compstmt,elsif)
IdExpr(id)
ReturnStmt(expr)
CompStmt(stmt) t
Else(comstmt)
IfStmt(expr,comptstmt,elsif,else)
CompStmt(stmt) t
DefStmt(id,arglist,compstmt)
LastArgList()
Literal(int)
LitExpr(literal)
ReturnStmt(expr)
Literal(int)
LitExpr(literal)
LastExpr(expr)
FunctionExpr(id,exprs)
ExprStmt(expr)
Literal(int)
LitExpr(literal)
ReturnStmt(expr)
Literal(int)
LitExpr(literal)
ReturnStmt(expr)
CompStmt(stmt) t
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
DefStmt(id,arglist,compstmt)
LastArgList(id)
IdExpr(id)
LastExpr(expr)
FunctionExpr(id,exprs)
ExprStmt(expr)
CompStmt(stmt) t
DefStmt(id,arglist,compstmt)
Literal(int)
LitExpr(literal)
AssignOpExpr(id,=,expr)
ExprStmt(expr)
IdExpr(id)
LastExpr(expr)
FunctionExpr(id,exprs)
ExprStmt(expr)
Literal(bool)
LitExpr(literal)
AssignOpExpr(id,=,expr)
ExprStmt(expr)
IdExpr(id)
LastExpr(expr)
FunctionExpr(id,exprs)
ExprStmt(expr)
IdExpr(id)
IdExpr(id)
LastExpr(expr)
FunctionExpr(id,exprs)
ExprStmt(expr)
CompStmt(stmt) t
Elsif()
Else()
IfStmt(expr,comptstmt,elsif,else)
Literal(int)
LitExpr(literal)
AssignOpExpr(id,=,expr)
ExprStmt(expr)
IdExpr(id)
NotExpr(expr)
Literal(int)
LitExpr(literal)
AssignOpExpr(id,+=,expr)
ExprStmt(expr)
IdExpr(id)
Literal(int)
LitExpr(literal)
BinOpExpr(expr,==,expr)
Literal(bool)
LitExpr(literal)
AssignOpExpr(id,=,expr)
ExprStmt(expr)
CompStmt(stmt) t
IdExpr(id)
Literal(int)
LitExpr(literal)
BinOpExpr(expr,==,expr)
Literal(int)
LitExpr(literal)
LastExpr(expr)
FunctionExpr(id,exprs)
ExprStmt(expr)
CompStmt(stmt) t
Elsif()
Elsif(expr,compstmt,elsif)
Else()
IfStmt(expr,comptstmt,elsif,else)
CompStmt(stmt) t
CompStmt(stmt,compstmt)
UntilStmt(expr,compstmt)
IdExpr(id)
LastExpr(expr)
FunctionExpr(id,exprs)
ExprStmt(expr)
Literal(int)
LitExpr(literal)
AssignOpExpr(id,=,expr)
ExprStmt(expr)
IdExpr(id)
Literal(int)
LitExpr(literal)
BinOpExpr(expr,<=,expr)
IdExpr(id)
Literal(int)
LitExpr(literal)
IdExpr(id)
Literal(int)
LitExpr(literal)
BinOpExpr(expr,*,expr)
LastExpr(expr)
FunctionExpr(id,exprs)
ExprStmt(expr)
CompStmt(stmt) t
Literal(int)
LitExpr(literal)
IdExpr(id)
Literal(int)
LitExpr(literal)
BinOpExpr(expr,*,expr)
LastExpr(expr)
FunctionExpr(id,exprs)
ExprStmt(expr)
CompStmt(stmt) t
Literal(int)
LitExpr(literal)
IdExpr(id)
Literal(int)
LitExpr(literal)
BinOpExpr(expr,*,expr)
LastExpr(expr)
FunctionExpr(id,exprs)
ExprStmt(expr)
CompStmt(stmt) t
Literal(int)
LitExpr(literal)
IdExpr(id)
Literal(int)
LitExpr(literal)
BinOpExpr(expr,*,expr)
LastExpr(expr)
FunctionExpr(id,exprs)
ExprStmt(expr)
CompStmt(stmt) t
Literal(int)
LitExpr(literal)
Literal(int)
LitExpr(literal)
LastExpr(expr)
Literal(int)
LitExpr(literal)
LastExpr(exprs,expr)
IdExpr(id)
LastExpr(exprs,expr)
FunctionExpr(id,exprs)
LastExpr(expr)
FunctionExpr(id,exprs)
ExprStmt(expr)
CompStmt(stmt) t
Literal(int)
LitExpr(literal)
Literal(int)
LitExpr(literal)
LastExpr(expr)
Literal(int)
LitExpr(literal)
LastExpr(exprs,expr)
IdExpr(id)
LastExpr(exprs,expr)
FunctionExpr(id,exprs)
LastExpr(expr)
FunctionExpr(id,exprs)
ExprStmt(expr)
CompStmt(stmt) t
When()
When(expr,compstmt,when)
When(expr,compstmt,when)
When(expr,compstmt,when)
When(expr,compstmt,when)
When(expr,compstmt,when)
Literal(int)
LitExpr(literal)
LastExpr(expr)
FunctionExpr(id,exprs)
ExprStmt(expr)
CompStmt(stmt) t
Else(comstmt)
CaseStmt(expr,expr,compstmt,when,else)
Literal(int)
LitExpr(literal)
AssignOpExpr(id,+=,expr)
ExprStmt(expr)
CompStmt(stmt) t
CompStmt(stmt,compstmt)
WhileStmt(expr,compstmt)
LastExpr()
FunctionExpr(id,exprs)
LastExpr(expr)
FunctionExpr(id,exprs)
ExprStmt(expr)
Literal(bool)
LitExpr(literal)
AssignOpExpr(id,=,expr)
ExprStmt(expr)
Literal(int)
LitExpr(literal)
IdExpr(id)
BinOpExpr(expr,+,expr)
AssignOpExpr(id,=,expr)
ExprStmt(expr)
LastExpr()
FunctionExpr(id,exprs)
ExprStmt(expr)
CompStmt(stmt)
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
CompStmt(stmt,compstmt)
Program(compstmt)
::TREE PRINT::
Program(
	CompStmt(
	DefStmt(id=blub, 
	PairArgList(
	PairArgList(
	LastArgList( "a" )
, "b" )
, "c" )
,
CompStmt(
	IfStmt(
	BinOpExpr(
	IdExpr( a )
, [assignop],
IdExpr( b )
)
,
CompStmt(
	ReturnStmt(
	IdExpr( c )
)
)
,
Elsif(
	BinOpExpr(
	IdExpr( a )
, [assignop],
IdExpr( c )
)
,
CompStmt(
	ReturnStmt(
	IdExpr( b )
)
)
,
Elsif()
)
,
Else(
	CompStmt(
	ReturnStmt(
	IdExpr( a )
)
)
)
)
)
)
,CompStmt(
	DefStmt(id=ret, 
	LastArgList()
,
CompStmt(
	ReturnStmt(
	LitExpr(
	Literal(1)
)
)
,CompStmt(
	ExprStmt(
	FunctionExpr(print,
	LastExprs(
	LitExpr(
	Literal(99999)
)
)
)
)
,CompStmt(
	ReturnStmt(
	LitExpr(
	Literal(2)
)
)
,CompStmt(
	ReturnStmt(
	LitExpr(
	Literal(3)
)
)
)
)
)
)
)
,CompStmt(
	DefStmt(id=a, 
	LastArgList( "a" )
,
CompStmt(
	ExprStmt(
	FunctionExpr(print,
	LastExprs(
	IdExpr( a )
)
)
)
)
)
,CompStmt(
	ExprStmt(
	AssignOpExpr(id=a, [assignop],
	LitExpr(
	Literal(5)
)
)
)
,CompStmt(
	ExprStmt(
	FunctionExpr(a,
	LastExprs(
	IdExpr( a )
)
)
)
,CompStmt(
	ExprStmt(
	AssignOpExpr(id=a, [assignop],
	LitExpr(
	Literal(1)
)
)
)
,CompStmt(
	ExprStmt(
	FunctionExpr(a,
	LastExprs(
	IdExpr( a )
)
)
)
,CompStmt(
	IfStmt(
	IdExpr( a )
,
CompStmt(
	ExprStmt(
	FunctionExpr(print,
	LastExprs(
	IdExpr( a )
)
)
)
)
,
Elsif()
,
Else()
)
,CompStmt(
	ExprStmt(
	AssignOpExpr(id=b, [assignop],
	LitExpr(
	Literal(0)
)
)
)
,CompStmt(
	UntillStmt(
	NotExpr(
	IdExpr( a )
)
,
CompStmt(
	ExprStmt(
	AssignOpExpr(id=b, [assignop],
	LitExpr(
	Literal(1)
)
)
)
,CompStmt(
	IfStmt(
	BinOpExpr(
	IdExpr( b )
, [assignop],
LitExpr(
	Literal(100)
)
)
,
CompStmt(
	ExprStmt(
	AssignOpExpr(id=a, [assignop],
	LitExpr(
	Literal(0)
)
)
)
)
,
Elsif(
	BinOpExpr(
	IdExpr( b )
, [assignop],
LitExpr(
	Literal(50)
)
)
,
CompStmt(
	ExprStmt(
	FunctionExpr(print,
	LastExprs(
	LitExpr(
	Literal(9999999)
)
)
)
)
)
,
Elsif()
)
,
Else()
)
)
)
)
,CompStmt(
	ExprStmt(
	FunctionExpr(print,
	LastExprs(
	IdExpr( b )
)
)
)
,CompStmt(
	ExprStmt(
	AssignOpExpr(id=c, [assignop],
	LitExpr(
	Literal(0)
)
)
)
,CompStmt(
	WhileStmt(
	BinOpExpr(
	IdExpr( c )
, [assignop],
LitExpr(
	Literal(5)
)
)
,
CompStmt(
	CaseStmt(
	IdExpr( c )
,
LitExpr(
	Literal(0)
)
,
CompStmt(
	ExprStmt(
	FunctionExpr(print,
	LastExprs(
	BinOpExpr(
	IdExpr( c )
, [assignop],
LitExpr(
	Literal(1)
)
)
)
)
)
)
,
When(
	LitExpr(
	Literal(1)
)
,
CompStmt(
	ExprStmt(
	FunctionExpr(print,
	LastExprs(
	BinOpExpr(
	IdExpr( c )
, [assignop],
LitExpr(
	Literal(10)
)
)
)
)
)
)
,
When(
	LitExpr(
	Literal(2)
)
,
CompStmt(
	ExprStmt(
	FunctionExpr(print,
	LastExprs(
	BinOpExpr(
	IdExpr( c )
, [assignop],
LitExpr(
	Literal(100)
)
)
)
)
)
)
,
When(
	LitExpr(
	Literal(3)
)
,
CompStmt(
	ExprStmt(
	FunctionExpr(print,
	LastExprs(
	BinOpExpr(
	IdExpr( c )
, [assignop],
LitExpr(
	Literal(1000)
)
)
)
)
)
)
,
When(
	LitExpr(
	Literal(4)
)
,
CompStmt(
	ExprStmt(
	FunctionExpr(print,
	LastExprs(
	FunctionExpr(blub,
	PairExprs(
	PairExprs(
	LastExprs(
	LitExpr(
	Literal(4)
)
)
,
LitExpr(
	Literal(123456789)
)
)
,
IdExpr( c )
)
)
)
)
)
)
,
When(
	LitExpr(
	Literal(5)
)
,
CompStmt(
	ExprStmt(
	FunctionExpr(print,
	LastExprs(
	FunctionExpr(blub,
	PairExprs(
	PairExprs(
	LastExprs(
	LitExpr(
	Literal(100)
)
)
,
LitExpr(
	Literal(888)
)
)
,
IdExpr( b )
)
)
)
)
)
)
,
When()
)
)
)
)
)
,
Else(
	CompStmt(
	ExprStmt(
	FunctionExpr(print,
	LastExprs(
	LitExpr(
	Literal(55555)
)
)
)
)
)
)
)
,CompStmt(
	ExprStmt(
	AssignOpExpr(id=c, [assignop],
	LitExpr(
	Literal(1)
)
)
)
)
)
)
,CompStmt(
	ExprStmt(
	FunctionExpr(print,
	LastExprs(
	FunctionExpr(ret,
	LastExprs()
)
)
)
)
,CompStmt(
	ExprStmt(
	AssignOpExpr(id=aap, [assignop],
	LitExpr(
	Literal(1)
)
)
)
,CompStmt(
	ExprStmt(
	AssignOpExpr(id=a, [assignop],
	BinOpExpr(
	LitExpr(
	Literal(1)
)
, [assignop],
IdExpr( aap )
)
)
)
,CompStmt(
	ExprStmt(
	FunctionExpr(ret,
	LastExprs()
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
5
true
true
9999999
100
0
10
200
3000
123456789
888
1
[ RuntimeError ] Variable 'aap' is not an integer but integer needed...
